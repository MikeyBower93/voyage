name: Elixir ECS CI/CD

on:
  workflow_call:
    inputs:
      ECR_REGISTRY:
        required: true
        type: string
      ECR_REPOSITORY:
        required: true
        type: string
      TASK_NAME:
        required: true
        type: string
      ECS_SERVICE:
        required: true
        type: string
      WORKING_DIR:
        required: true
        type: string
      AWS_REGION:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  build:
    name: Build, Push and Deploy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: main
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ inputs.AWS_REGION }}
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push docker image
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      env:
        IMAGE_TAG:  latest
        ECR_REPOSITORY: ${{ inputs.ECR_REPOSITORY }}
        ECR_REGISTRY: ${{ inputs.ECR_REGISTRY }}
      working-directory: ${{ inputs.WORKING_DIR }}

    - name: Download task definition
      run: |
        aws ecs describe-task-definition --task-definition ${{ inputs.TASK_NAME }} --query taskDefinition > task-definition.json

    - name: Deploy to Amazon ECS
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: task-definition.json
        service: ${{ inputs.ECS_SERVICE }}
        cluster: ecs_cluster
        wait-for-service-stability: true