name: Apollo Deploy

on:
  push:
    branches: [ main ]

jobs:
  build:
    name: Build And Push Container
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: main
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build Docker Image
      run: |
        docker build \
        --build-arg MIX_ENV=prod \
        --build-arg SECRET_KEY_BASE=$(SECRET_KEY_BASE) \
        -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .

        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      env:
        SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
        IMAGE_TAG:  latest
        ECR_REPOSITORY: voyage-repo
        ECR_REGISTRY: 426768827450.dkr.ecr.eu-west-2.amazonaws.com
      working-directory: apollo

    - name: Download task definition
      run: |
        aws ecs describe-task-definition --task-definition voyage_task:4

    # - name: Fill in the new image ID in the Amazon ECS task definition
    #   id: task-def
    #   uses: aws-actions/amazon-ecs-render-task-definition@v1
    #   with:
    #     task-definition: task-definition.json
    #     container-name: voyage
    #     image: ${{ steps.build-image.outputs.image }}
    #     working-directory: apollo

    # - name: Deploy Amazon ECS task definition
    #   uses: aws-actions/amazon-ecs-deploy-task-definition@v1
    #   with:
    #     task-definition: ${{ steps.task-def.outputs.task-definition }}
    #     service: voyage_service
    #     cluster: voyage_cluster
    #     wait-for-service-stability: true
    #     working-directory: apollo